# vim: foldmethod=marker foldlevel=0

global !p

import os

def package():
    return os.getcwd().split(os.path.sep)[-1]

endglobal

# IDIOMS ------------------------------------------------------------------ {{{1

snippet #! "Shebang" bA
#!/usr/bin/env python3
endsnippet

snippet !main "__main__" bA
if __name__ == "__main__":
    ${0:${VISUAL:pass}}
endsnippet

snippet !impl "raise NotImplementedError()" bA
raise NotImplementedError($1)
endsnippet

snippet !exit "raise SystemExit()" bA
raise SystemExit(${1:0})
endsnippet

snippet !doc "Docstring" bA
"""${1:${VISUAL}}"""
endsnippet

snippet !h1 "Header 1" bA
# ==============================================================================
# $1
# ==============================================================================
endsnippet

snippet !h2 "Header 2" bA
# ------------------------------------------------------------------------------
# $1
# ------------------------------------------------------------------------------
endsnippet

snippet !h3 "Header 3" bA
# $1 `!p snip.rv = "=" * (77 - len(t[1]))`$0
endsnippet

snippet !h4 "Header 4" bA
# $1 `!p snip.rv = "-" * (77 - len(t[1]))`$0
endsnippet

# FUNCTIONS & METHODS ----------------------------------------------------- {{{1

snippet def "Function" b
def ${1:name}(`!p snip.rv = "self" if snip.indent else ""`$2):
    ${0:${VISUAL:raise NotImplementedError()}}
endsnippet

snippet sdef "Static method" b
@staticmethod
def ${1:name}($2):
    ${0:${VISUAL:raise NotImplementedError()}}
endsnippet

snippet adef "Abstract method" b
@abstractmethod
def ${1:name}(self$2):
    pass
endsnippet

snippet pdef "Property" b
@property
def ${1:name}(self):
    ${0:${VISUAL:return None}}
endsnippet

snippet mdef "Magic method" b
def __${1:name}__(self$2):
    ${0:${VISUAL:raise NotImplementedError()}}
endsnippet

snippet idef "Init method" b
def __init__(self):
    ${0:pass}
endsnippet

# CLASSES ----------------------------------------------------------------- {{{1

snippet class "Class" b
class ${1:Name}:
    """${2:TODO: Missing documentation.}"""

    def __init__(self):
        ${0:pass}
endsnippet

snippet dclass "Dataclass" b
@dataclass
class ${1:Name}:
    ${2:member}: ${3:None}
endsnippet

# MISCELLANEOUS ----------------------------------------------------------- {{{1

snippet _ "__something__" w
__${1:main}__
endsnippet

snippet !setup "Python setuptools template" bA
#!/usr/bin/env python

from setuptools import setup, find_packages

import `!p snip.rv = package()`

with open('README.md', 'r', 'utf-8') as f:
    README = f.read()

setup(
    name="`!p snip.rv = package()`",
    version=`!p snip.rv = package()`.__version__,
    description='',
    long_description=README,
    license='',
    author='',
    author_email='',
    packages=find_packages('.'),
    entry_points={
        'console_scripts': [
            '`!p snip.rv = package()`=`!p snip.rv = package()`.__main__:main',
        ]
    }
)
endsnippet
