global !p

def math():
    return vim.eval('vimtex#syntax#in_mathzone()') == '1'

def comment():
    return vim.eval('vimtex#syntax#in_comment()') == '1'

def env(name):
    [x,y] = vim.eval("vimtex#env#is_inside('" + name + "')")
    return x != '0' and x != '0'

endglobal

# ------------------------------------------------------------------------------
# BLOCKS
# ------------------------------------------------------------------------------

snippet use "Package" bA
\usepackage{${1:package}}$0
endsnippet

snippet beg "Environment" bA
\begin{${1:itemize}}
  ${2:${VISUAL}}
\end{$1}
endsnippet

snippet ul "Itemize environment" bA
\begin{itemize}
  \item ${1:${VISUAL}}
\end{itemize}
endsnippet

snippet ol "Enumerate environment" bA
\begin{enumerate}
  \item ${1:${VISUAL}}
\end{enumerate}
endsnippet

context "env('itemize') or env('enumerate')"
snippet - "List item" bA
\item ${1:${VISUAL}}
endsnippet

snippet !abs "Abstract environment" bA
\begin{abstract}
  ${1:${VISUAL}}
\end{abstract}
endsnippet

snippet !ch "Chapter" bA
\chapter{${1:Title}} \label{ch:${2:`!p snip.rv = t[1].replace(' ', '-').lower()`}}
$0
endsnippet

snippet !sec "Section" bA
\section{${1:Title}} \label{sec:${2:`!p snip.rv = t[1].replace(' ', '-').lower()`}}
$0
endsnippet

snippet !sub "Section" bA
\subsection{${1:Title}} \label{subsec:${2:`!p snip.rv = t[1].replace(' ', '-').lower()`}}
$0
endsnippet

snippet !ssub "Section" bA
\subsubsection{${1:Title}} \label{subsubsec:${2:`!p snip.rv = t[1].replace(' ', '-').lower()`}}
$0
endsnippet

snippet lorem "Lorem ipsum" bA
\lipsum[${1:1-2}]$0
endsnippet

snippet !bib "Bibliography" bA
\bibliographystyle{plain}
\bibliography{references}
endsnippet

priority 10
snippet !fig "Figure" bA
\begin{figure}[ht]
  \centering
  \includegraphics[width=${3:0.75}\textwidth]{images/${1:figure.pdf}}
  \caption{${2:`!p snip.rv = t[1].split('.')[0]`.}}
  \label{fig:${4:`!p snip.rv = t[1].split('.')[0]`}}
\end{figure}
endsnippet

priority 20
snippet '([a-zA-Z0-9_-]+)_fig' "Named Figure" rbA
\begin{figure}[ht]
  \centering
  \includegraphics[width=${2:0.75}\textwidth]{images/`!p snip.rv = match.group(1)`.pdf}
  \caption{${1:`!p snip.rv = match.group(1)`}.}
  \label{fig:`!p snip.rv = match.group(1)`}
\end{figure}
endsnippet

snippet !sfig "Side by side Figure" bA
\begin{figure}[ht]
  \centering
  \begin{subfigure}{.5\textwidth}
    \centering
    \includegraphics[width=\linewidth]{images/${1:left.pdf}}
    \caption{$3}
    \label{fig:`!p snip.rv = t[1].split('.')[0]`}
  \end{subfigure}%
  \begin{subfigure}{.5\textwidth}
    \centering
    \includegraphics[width=\linewidth]{images/${2:right.pdf}}
    \caption{$4}
    \label{fig:`!p snip.rv = t[2].split('.')[0]`}
  \end{subfigure}
  \caption{$5}
  \label{fig:$6}
\end{figure}
endsnippet

snippet !tab "Table" bA
\begin{table}[ht]
  \centering
  \caption{${1:TODO: Missing caption.}}
  \begin{tabular}{@{}${3:c}@{}}
    \toprule
    $0`!p snip.rv = (len(t[3]) - 1) * ' &' + ' \\\\'`
    \bottomrule
  \end{tabular}
  \label{tab:${2:label}}
\end{table}
endsnippet

context "env('tabular')"
snippet '(\d+)row' "Table row" rbA
$0`!p snip.rv = (int(match.group(1)) - 1) * ' &' + ' \\\\'`
endsnippet

snippet !thm "Theorem" bA
\begin{theorem} \label{thm:$1}
$0
\end{theorem}
endsnippet

snippet !pr "Proof" bA
\begin{proof}
$0
\end{proof}
endsnippet

# ------------------------------------------------------------------------------
# INLINE
# ------------------------------------------------------------------------------

snippet @ "Citation" i
~\cite{$1}$0
endsnippet

snippet # "Reference" i
~\ref{$1}$0
endsnippet

snippet !lab "Label" w
\label{$1}$0
endsnippet

snippet i "Italic" w
\textit{${1:${VISUAL}}}$0
endsnippet

snippet b "Bold" w
\textbf{${1:${VISUAL}}}$0
endsnippet

snippet t "Monospaced" w
\texttt{${1:${VISUAL}}}$0
endsnippet

snippet '`(.*)`' "Monospaced" wr
\texttt{`!p snip.rv = match.group(1)`}$0
endsnippet

priority 10
snippet "" "Quoted text" w
\`\`${1:${VISUAL}}''$0
endsnippet

priority 20
snippet '"(.+)"' "Quoted text" wr
\`\``!p snip.rv = match.group(1)`''$0
endsnippet

snippet qed "QED" iA
\QED
endsnippet

snippet !todo "TODO comment" iA
% TODO: $0
endsnippet

# ------------------------------------------------------------------------------
# MATH
# ------------------------------------------------------------------------------

snippet mk "Inline math" wA
\$$1\$`!p
if t[2] and t[2][0] not in [',', '.', '?', '-', ' ']:
  snip.rv = ' '
else:
  snip.rv = ''
`$2$0
endsnippet

snippet '([A-Za-z])\$' "Letter math" wr
\$`!p snip.rv = match.group(1)`\$
endsnippet

snippet dm "Display Math" bA
\[
  ${1:${VISUAL}}
\]$0
endsnippet

snippet ali "Align Math" bA
\begin{align*}
  ${1:${VISUAL}}
\end{align*}
endsnippet

snippet eq "Equation Math" bA
\begin{equation}
  ${1:${VISUAL}}
\end{equation}
endsnippet

priority 100
context "math()"
snippet t "Text" w
\text{${1:${VISUAL}}}
endsnippet

context "math()"
snippet sr "Square" iA
^2
endsnippet

context "math()"
snippet cb "Cube" iA
^3
endsnippet

priority 10
context "math()"
snippet // "Fraction" i
\\frac{${1:${VISUAL}}}{$2}$0
endsnippet

priority 100
context "math()"
snippet '(\\?[A-Za-z0-9^_\(\)\+\-]+)/([A-Za-z0-9_]+)' "Fraction" ri
\\frac{`!p snip.rv = match.group(1)`}{`!p snip.rv = match.group(2)`}$0
endsnippet

context "math()"
snippet '([A-Za-z])(\d)' "Auto subscript" rwA
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet '([A-Za-z])([A-Za-z])' "Letter subscript" rw
`!p snip.rv = match.group(1)`_`!p snip.rv = match.group(2)`
endsnippet

context "math()"
snippet sum "Summation" wA
\sum_{${1:i \in \R}} ${2:${VISUAL:a}}
endsnippet

context "math()"
snippet nsum "Summation until n" wA
\sum_{${1:i=0}}^{${2:n}} ${3:${VISUAL:a}}
endsnippet

context "math()"
snippet == "Equals" iA
&= ${1:${VISUAL}} \\\\
endsnippet

context "math()"
snippet mod "Modulus" wA
\\|${1:x}\\|$0
endsnippet

# Sybols
# ------------------------------------------------------------------------------

context "math()"
snippet != "Not equal" iA
\neq 
endsnippet

context "math()"
snippet <= "Less than or equal" iA
\leq 
endsnippet

context "math()"
snippet >= "Greater than or equal" iA
\geq 
endsnippet

context "math()"
snippet inn "In set" wA
\in 
endsnippet

context "math()"
snippet ninn "Not in set" wA
\notin 
endsnippet

context "math()"
snippet EE "Exists" iA
\exists 
endsnippet

context "math()"
snippet AA "Forall" iA
\forall 
endsnippet

context "math()"
snippet iff "iff" iA
\iff 
endsnippet

context "math()"
snippet xx "times" iA
\times 
endsnippet

context "math()"
snippet ** "cdot" iA
\cdot 
endsnippet

context "math()"
snippet nabla "Nabla" iA
\nabla 
endsnippet

context "math()"
snippet part "partial" iA
\partial 
endsnippet

context "math()"
snippet => "implies" iA
\implies 
endsnippet

context "math()"
snippet -> "to" iA
\to 
endsnippet

context "math()"
snippet !> "mapsto" iA
\mapsto 
endsnippet

context "math()"
snippet OO "Empty set" iA
\emptyset
endsnippet

context "math()"
snippet NN "Natural numbers" iA
\N
endsnippet

context "math()"
snippet ZZ "Integer numbers" iA
\Z
endsnippet

context "math()"
snippet QQ "Rational numbers" iA
\Q
endsnippet

context "math()"
snippet RR "Real numbers" iA
\R
endsnippet

context "math()"
snippet cc "Proper subset" iA
\subset 
endsnippet

context "math()"
snippet c= "Subset" iA
\subseteq 
endsnippet

context "math()"
snippet CC "Proper subset" iA
\supset 
endsnippet

context "math()"
snippet C= "Subset" iA
\supseteq 
endsnippet

context "math()"
snippet UU "Union" iA
\cup 
endsnippet

context "math()"
snippet II "Intersection" iA
\cap 
endsnippet

context "math()"
snippet set "Set" w
\\{${1:${VISUAL}}\\}
endsnippet

context "math()"
snippet lr "Left and right parens" iA
\left( ${1:${VISUAL}} \right)
endsnippet

priority 10
context "math()"
snippet "vec" "Vector" riA
\vec{${1:${VISUAL}}}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])vec" "Vector" riA
\vec{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "bar" "Bar" riA
\overline{${1:${VISUAL}}}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])bar" "Bar" riA
\overline{`!p snip.rv = match.group(1)`}
endsnippet

priority 10
context "math()"
snippet "hat" "Hat" riA
\hat{${1:${VISUAL}}}
endsnippet

priority 100
context "math()"
snippet "([a-zA-Z])hat" "Hat" riA
\hat{`!p snip.rv = match.group(1)`}
endsnippet

priority 100
context "math()"
snippet '(?<!\\)(sin|cos|arccot|cot|csc|ln|log|exp|star|perp|sqrt)' "Functions 1" rwA
\\`!p snip.rv = match.group(1)`
endsnippet

priority 200
context "math()"
snippet '(?<!\\)(arcsin|arccos|arctan|arccot|arccsc|arcsec|pi|zeta|int)' "Functions 2" rwA
\\`!p snip.rv = match.group(1)`
endsnippet
